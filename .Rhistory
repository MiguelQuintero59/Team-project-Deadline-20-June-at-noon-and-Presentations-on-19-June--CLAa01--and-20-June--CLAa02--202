cwe
cwd
clear
install.packages(c("shiny", "plotly", "dplyr", "tidyr"))
install.packages(c("shiny", "plotly", "dplyr", "tidyr"))
setwd("~app.R")
setwd("~/app.R")
shiny::runApp()
install.packages(c("shiny", "plotly", "dplyr", "tidyr"))
shiny::runApp()
# Definition of vectors
planets <- c("Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune")
type <- c("Terrestrial planet", "Terrestrial planet", "Terrestrial planet",
"Terrestrial planet", "Gas giant", "Gas giant", "Gas giant", "Gas giant")
diameter <- c(0.382, 0.949, 1, 0.532, 11.209, 9.449, 4.007, 3.883)
rotation <- c(58.64, -243.02, 1, 1.03, 0.41, 0.43, -0.72, 0.67)
rings <- c(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE)
# Definition of vectors
planets <- c("Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune")
type <- c("Terrestrial planet", "Terrestrial planet", "Terrestrial planet",
"Terrestrial planet", "Gas giant", "Gas giant", "Gas giant", "Gas giant")
diameter <- c(0.382, 0.949, 1, 0.532, 11.209, 9.449, 4.007, 3.883)
rotation <- c(58.64, -243.02, 1, 1.03, 0.41, 0.43, -0.72, 0.67)
rings <- c(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE)
data.frame(planets,type,diameter,rotation,rings)
# Definition of vectors
planets <- c("Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune")
type <- c("Terrestrial planet", "Terrestrial planet", "Terrestrial planet",
"Terrestrial planet", "Gas giant", "Gas giant", "Gas giant", "Gas giant")
diameter <- c(0.382, 0.949, 1, 0.532, 11.209, 9.449, 4.007, 3.883)
rotation <- c(58.64, -243.02, 1, 1.03, 0.41, 0.43, -0.72, 0.67)
rings <- c(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE)
planets_df <- data.frame(planets, type, diameter, rotation, rings)
str(planets_df)
# Construct planets_df: strings are not converted to factors!
planets_df <- data.frame(planets, type_factor, diameter, rotation, rings, stringsAsFactors = FALSE)
type_factor <- factor(type)
planets_df <- data.frame(planets, type_factor, diameter, rotation, rings, stringsAsFactors = FALSE)
planets_df.head()
planets_df.head
planets_df
str(planets_df)
names(planets_df) <- c("name", "type", "diameter", "rotation", "has_rings")
str(planets_df)
source("~/Documents/ESSEX/STATS/Initial Task Deadline 16 May at noon-20250507/Initial Task Miguel Quintero.R")
setwd("~/Documents/ESSEX/STATS/Team project Deadline 20 June at noon and Presentations on 19 June (CLAa01) and 20 June (CLAa02)-202")
library(ggplot2)
library(reshape2)
library(pheatmap)
dataframe <- read.csv(file = "gene-expression-invasive-vs-noninvasive-cancer.csv")
View(dataframe)
dataframe.head()
dataframe.head()
dataframe <- read.csv(file = "gene-expression-invasive-vs-noninvasive-cancer.csv")
head(dataframe)
dataframe <- read.csv(file = "gene-expression-invasive-vs-noninvasive-cancer.csv")
dataframe$CancerType <- ifelse(dataframe$class == 1, "Non-invasive", "Invasive")
dataframe$CancerType <- ifelse(dataframe$Class == 1, "Non-invasive", "Invasive")
counts <- table(data$CancerType)
counts <- table(dataframe$CancerType)
barplot(counts,
main = "Cancer Type Counts",
col = c("skyblue", "salmon"),
ylab = "Number of Cases")
dataframe <- read.csv(file = "gene-expression-invasive-vs-noninvasive-cancer.csv")
dataframe$CancerType <- ifelse(dataframe$Class == 1, "Non-invasive", "Invasive")
# Count the categories
counts <- table(dataframe$CancerType)
# Plot
barplot(counts,
main = "Cancer Type Counts",
col = c("skyblue", "salmon"),
ylab = "Number of Cases")
print(counts)
library(ggplot2)
library(reshape2)
library(pheatmap)
dataframe <- read.csv(file = "gene-expression-invasive-vs-noninvasive-cancer.csv")
dataframe$CancerType <- ifelse(dataframe$Class == 1, "Non-invasive", "Invasive")
# Count the categories
counts <- table(dataframe$CancerType)
# Plot
barplot(counts,
main = "Cancer Type Counts",
col = c("skyblue", "salmon"),
ylab = "Number of Cases")
for (i in seq_along(names(data))) {
cat(i, ":", names(data)[i], "\n")
}
for (i in seq_along(names(data))) {
print(i, ":", names(data)[i], "\n")
}
for (i in seq_along(names(dataframe))) {
print(i, ":", names(dataframe)[i], "\n")
}
for (i in seq_along(names(dataframe))) {
print(i, ":", names(dataframe)[i], "\n")
}
for (i in seq_along(names(dataframe))) {
cat(i, ":", names(dataframe)[i], "\n")
}
for (i in seq_along(names(dataframe))) {
cat(i, ":", names(dataframe)[i], "\n")
}
df <- df[sample(nrow(df)), ]
# Shuffle entire dataframe
dataframe <- dataframe[sample(nrow(dataframe)), ]
# Separate fraud and non-fraud
fraud_df <- dataframe %>% filter(Class == 1)
# Shuffle entire dataframe
dataframe <- dataframe[sample(nrow(dataframe)), ]
# Separate fraud and non-fraud
fraud_df <- dataframe %>% filter(Class == 1)
# Shuffle entire dataframe
dataframe <- dataframe[sample(nrow(dataframe)), ]
# Separate fraud and non-fraud
fraud_df <- dataframe %>% filter(Class == 1)
library(dplyr)
fraud_df <- dataframe %>% filter(Class == 1)
non_fraud_df <- dataframe %>% filter(Class == 0) %>% slice(1:492)
normal_distributed_df <- bind_rows(fraud_df, non_fraud_df)
set.seed(42)
new_df <- normal_distributed_df[sample(nrow(normal_distributed_df)), ]
head(new_df)
View(new_df)
dataframe <- dataframe[sample(nrow(dataframe)), ]
# Separate fraud and non-fraud
fraud_df <- dataframe %>% filter(Class == 1)
non_fraud_df <- dataframe %>% filter(Class == 0) %>% slice(1:492)
# Combine and shuffle again
normal_distributed_df <- bind_rows(fraud_df, non_fraud_df)
set.seed(42)
new_df <- normal_distributed_df[sample(nrow(normal_distributed_df)), ]
# View the first few rows
head(new_df)
counts <- table(new_df$CancerType)
print(counts)
normal_distributed_df <- bind_rows(fraud_df, non_fraud_df)
new_df <- normal_distributed_df[sample(nrow(normal_distributed_df)), ]
counts <- table(new_df$Class)
print(counts)
library(ggplot2)
library(reshape2)
library(pheatmap)
library(dplyr)
dataframe <- read.csv(file = "gene-expression-invasive-vs-noninvasive-cancer.csv")
dataframe$CancerType <- ifelse(dataframe$Class == 1, "Non-invasive", "Invasive")
# Count the categories
counts <- table(dataframe$CancerType)
# Plot
barplot(counts,
main = "Cancer Type Counts",
col = c("skyblue", "salmon"),
ylab = "Number of Cases")
# Shuffle entire dataframe
dataframe <- dataframe[sample(nrow(dataframe)), ]
# Separate fraud and non-fraud
fraud_df <- dataframe %>% filter(Class == 1)
non_fraud_df <- dataframe %>% filter(Class == 0) %>% slice(1:492)
# Combine and shuffle again
normal_distributed_df <- bind_rows(fraud_df, non_fraud_df)
set.seed(42)
new_df <- normal_distributed_df[sample(nrow(normal_distributed_df)), ]
# View the first few rows
head(new_df)
# Count the categories
counts <- table(new_df$Class)
print(counts)
library(ggplot2)
library(reshape2)
library(pheatmap)
library(dplyr)
dataframe <- read.csv(file = "gene-expression-invasive-vs-noninvasive-cancer.csv")
dataframe$CancerType <- ifelse(dataframe$Class == 1, "Non-invasive", "Invasive")
# Count the categories
counts <- table(dataframe$CancerType)
# Plot
barplot(counts,
main = "Cancer Type Counts",
col = c("skyblue", "salmon"),
ylab = "Number of Cases")
# Shuffle entire dataframe
dataframe <- dataframe[sample(nrow(dataframe)), ]
# Separate fraud and non-fraud
fraud_df <- dataframe %>% filter(Class == 1)
non_fraud_df <- dataframe %>% filter(Class == 0) %>% slice(1:492)
# Combine and shuffle again
normal_distributed_df <- bind_rows(fraud_df, non_fraud_df)
set.seed(42)
new_df <- normal_distributed_df[sample(nrow(normal_distributed_df)), ]
counts <- table(new_df$CancerType)
print(counts)
dataframe <- read.csv(file = "gene-expression-invasive-vs-noninvasive-cancer.csv")
dataframe$CancerType <- ifelse(dataframe$Class == 1, "Non-invasive", "Invasive")
# Count the categories
counts <- table(dataframe$CancerType)
print(counts)
# Plot
barplot(counts,
main = "Cancer Type Counts",
col = c("skyblue", "salmon"),
ylab = "Number of Cases")
library(ggplot2)
library(reshape2)
library(pheatmap)
library(dplyr)
dataframe <- read.csv(file = "gene-expression-invasive-vs-noninvasive-cancer.csv")
dataframe$CancerType <- ifelse(dataframe$Class == 1, "Non-invasive", "Invasive")
# Count the categories
counts <- table(dataframe$CancerType)
print(counts)
# Plot
barplot(counts,
main = "Cancer Type Counts",
col = c("skyblue", "salmon"),
ylab = "Number of Cases")
library(ggplot2)
library(reshape2)
library(pheatmap)
library(dplyr)
dataframe <- read.csv(file = "gene-expression-invasive-vs-noninvasive-cancer.csv")
dataframe$CancerType <- ifelse(dataframe$Class == 1, "Non-invasive", "Invasive")
# --- Example subset using my registration number ---
group_number <- 7
# --- Loading Subset Dataframe ----
df_subsets <- read.csv(file = "teamsubsets.csv")
# --- Filtering my registration number ---
reg_id <- which(df_subsets$RegId == group_number)
# --- Extracting variables indexes from subsets data ---
subsets <- unlist(c(df_subsets[reg_id, -1]))
Class <- dataframe$Class # Extract the "Class" column, which represents the labels or targets.
# --- Filtering columns from dataframe gene-expression-invasive-vs-noninvasive-cancer ---
df <- dataframe[, subsets]
View(df)
View(df_subsets)
View(df_subsets)
dataframe <- read.csv(file = "gene-expression-invasive-vs-noninvasive-cancer.csv")
dataframe$CancerType <- ifelse(dataframe$Class == 1, "Non-invasive", "Invasive")
# --- Example subset using my registration number ---
group_number <- 7
# --- Loading Subset Dataframe ----
df_subsets <- read.csv(file = "teamsubsets.csv", sep = '.')
View(df_subsets)
dataframe <- read.csv(file = "gene-expression-invasive-vs-noninvasive-cancer.csv")
dataframe$CancerType <- ifelse(dataframe$Class == 1, "Non-invasive", "Invasive")
# --- Example subset using my registration number ---
group_number <- 7
# --- Loading Subset Dataframe ----
df_subsets <- read.csv(file = "teamsubsets.csv", sep = '\')
View(df_subsets)
View(df_subsets)
View(df_subsets)
View(df_subsets)
View(df_subsets)
View(df_subsets)
View(df_subsets)
View(df_subsets)
View(df_subsets)
View(df_subsets)
View(df_subsets)
View(df_subsets)
View(df_subsets)
View(df_subsets)
View(df_subsets)
dataframe <- read.csv(file = "gene-expression-invasive-vs-noninvasive-cancer.csv")
dataframe$CancerType <- ifelse(dataframe$Class == 1, "Non-invasive", "Invasive")
# --- Example subset using my registration number ---
group_number <- 7
# --- Loading Subset Dataframe ----
df_subsets <- read.csv(file = "teamsubsets.csv")
dataframe <- read.csv(file = "gene-expression-invasive-vs-noninvasive-cancer.csv")
dataframe$CancerType <- ifelse(dataframe$Class == 1, "Non-invasive", "Invasive")
# --- Example subset using my registration number ---
group_number <- 7
# --- Loading Subset Dataframe ----
df_subsets <- read.csv(file = "teamsubsets.csv")
View(df_subsets)
View(df_subsets)
View(df_subsets)
View(df_subsets)
View(df_subsets)
View(df_subsets)
View(df_subsets)
View(df_subsets)
library(ggplot2)
